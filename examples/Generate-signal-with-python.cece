<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!-- Simulation definition -->
<simulation world-size="20um 20um" dt="1s" iterations="50">

    <!-- Python plugin required -->
    <plugin name="diffusion" />
    <plugin name="python" />
    <plugin name="diffusion-python" />

    <!-- Define diffusion -->
    <module name="diffusion" grid="200">
        <signal name="gfp" diffusion-rate="50um2/s" degradation-rate="0.001/s" color="green" />
    </module>

    <!-- Generate signal -->
    <module name="python:generate">
<![CDATA[
import math

def update(dt, simulation):
    diffusion = simulation.useModule("diffusion")
    size = diffusion.gridSize
    radius = size.x / 20
    signalAmount = 1

    for x in range(-radius, radius + 1):
        for y in range(-radius, radius + 1):
            if (math.sqrt(x * x + y * y) <= radius):
                diffusion.setSignal(0, size.x / 2 + x, size.y / 2 + y, signalAmount)
]]>
    </module>

    <!-- Store diffusion state each iteration -->
    <module name="diffusion.store-state" />
</simulation>

